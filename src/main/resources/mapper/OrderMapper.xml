<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.angus.dao.mapper.OrderMapper">


    <resultMap id="orderBaseResultMap" type="com.angus.dao.pojo.Order">
        <id column="orderId" property="orderId"/>
        <result column="orderNumber" property="orderNumber"/>
        <result column="orderName" property="orderName"/>
        <result column="orderDate" property="orderDate"/>
        <result column="serviceProject" property="serviceProject"/>
        <result column="charge" property="charge"/>
        <result column="moneySituation" property="moneySituation"/>
        <result column="serviceStatus" property="serviceStatus"/>
    </resultMap>

    <!--    获取所有用户  -->
    <select id="getAllOrders" resultMap="orderBaseResultMap">
        SELECT * FROM `order`
    </select>
    <!--    获取所有用户  -->
    <select id="addNewOrder" resultMap="orderBaseResultMap">
        INSERT INTO `order`
        (orderNumber,orderDate,charge,
        orderName,orderEncode,orderType,serviceType,receiveLabor,
        specialRequest,cheapCondition,realCharge,accountCharge,tailCharge,
        CHCost,LHCost,WWCost,projectProcess,otherRemark,calculateCharge,salePerson,exampleName,testProject,dutyProjector,ticketStatus)
        VALUES(#{orderNumber},#{orderDate},#{charge},
        #{orderName},#{orderEncode},#{orderType},
        #{serviceType},#{receiveLabor},#{specialRequest},#{cheapCondition},#{realCharge},
        #{accountCharge},#{tailCharge},#{CHCost},#{LHCost},#{WWCost},
        #{projectProcess},#{otherRemark},#{calculateCharge},#{salePerson},#{exampleName},#{testProject},#{dutyProjector},#{ticketStatus})
    </select>

    <!--    根据id查询用户信息    -->
    <select id="getOrderById" resultMap="orderBaseResultMap">
        SELECT * FROM `order` where orderId=#{orderId}
    </select>
    <!--    根据id查询用户信息    -->
    <select id="getOrderCustomersByCustomerId" resultMap="orderBaseResultMap">
        SELECT * FROM `order` o1 left join res_orderCustomer r1 on o1.orderId=r1.orderId LEFT JOIN customer c1 ON
        r1.customerId=c1.customerId where r1.customerId=#{customerId}
    </select>

    <select id="getLastOrderNumber" resultType="java.lang.Integer">
        SELECT orderNumber FROM `order` order by orderNumber
    </select>

    <select id="getOrderByEncode" resultType="java.lang.Integer">
        SELECT orderId FROM `order` where orderEncode=#{orderEncode} LIMIT 0,1
    </select>

    <!--    根据id删除用户信息    -->
    <select id="deleteOrderById">
        delete from `order` where orderId=#{orderId};
    </select>

    <!--    根据id更新用户信息    -->
    <update id="updateOrder">
        UPDATE `order` set
        orderName=#{orderName},orderNumber=#{orderNumber},orderDate=#{orderDate},charge=#{charge},orderEncode=#{orderEncode},
        orderType=#{orderType},serviceType=#{serviceType},receiveLabor=#{receiveLabor},specialRequest=#{specialRequest},
        cheapCondition=#{cheapCondition},realCharge=#{realCharge},accountCharge=#{accountCharge},tailCharge=#{tailCharge},
        CHCost=#{CHCost},LHCost=#{LHCost},WWCost=#{WWCost},projectProcess=#{projectProcess},
        otherRemark=#{otherRemark},exampleName=#{exampleName},testProject=#{testProject},dutyProjector=#{dutyProjector},
        ticketStatus=#{ticketStatus},salePerson=#{salePerson},calculateCharge=#{calculateCharge}
        where orderId=#{orderId}
    </update>

</mapper>